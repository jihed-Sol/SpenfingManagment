<?xml version="1.0" encoding="ISO-8859-1"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:util="http://www.springframework.org/schema/util" xmlns:context="http://www.springframework.org/schema/context"
		xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
		xmlns:p="http://www.springframework.org/schema/p"
		xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
			http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

	<!-- DATA ACCESS -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource"
				p:driverClass="${database.driver}" p:url="${database.url}"
				p:username="${database.username}" p:password="${database.password}" />
				
	<!-- HIBERNATE CONFIGURATION -->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
 		<property name="dataSource" ref="dataSource"/> 
 		<property name="persistenceUnitName" value="PCTUnit" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" 
				p:databasePlatform="${database.target}" p:generateDdl="${database.generateDdl}" p:showSql="${database.showSql}" />
		</property>
		<property name="jpaPropertyMap">
			<map>
				<entry key="hibernate.dialect" value="${database.target}" />
				<entry key="hibernate.hbm2ddl.auto" value="${database.generateDdl.mode}" />
				<entry key="hibernate.format_sql" value="${database.showSql}" />
				<entry key="hibernate.use_sql_comments" value="${database.showSql}" />
			</map>
	    </property>
	</bean>
	
	<!-- ENTITY MANAGER FACTORY -->
	<bean id="sessionFactory" factory-bean="entityManagerFactory" factory-method="getSessionFactory" />
	
	<!-- ADD EXCEPTION TRANSLATION TO REPOSITORIES BEANS -->
	<bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
	
	<!-- THE SPRING CONTAINER WILL ACT AS JPA CONTAINER AND INJECT THE ENTITY-MANAGER FROM ENTITY-MANAGER-FACTORY-->
	<bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
		
	<!-- TX THIS ANNOTATION TELLS SPRING TO LOOK FOR @TRANSACTIONNAL AND ADD TRANSACTIONNAL ADVICE-->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="false" />
	
	<!-- OPEN AND CLOSE TRANSACTION BINDED TO THE CURRENT THREAD CONTEXT -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager" p:entityManagerFactory-ref="entityManagerFactory" />

	<!-- S P R I N G   A N N O T A T I O N S -->
	
	<!-- ENABLE SPRING ANNOTATION -->
	<context:annotation-config/>
	
	<!--PACKAGE TO SCAN -->	
	<context:component-scan base-package="com.byzaneo.commons">
		<context:exclude-filter type="regex" expression="com.byzaneo.commons.dao.*"/>
		<context:exclude-filter type="regex" expression="com.byzaneo.commons.service.Log4jServiceImpl"/>
		<context:exclude-filter type="regex" expression="com.byzaneo.commons.service.MailServiceImpl"/>
		<context:exclude-filter type="regex" expression="com.byzaneo.commons.service.ResourceBundleServiceImpl"/>
		<context:exclude-filter type="regex" expression="com.byzaneo.commons.service.SchedulerServiceImpl"/>
		<context:exclude-filter type="regex" expression="com.byzaneo.commons.service.RevisionServiceImpl"/>
	</context:component-scan>
	
	<context:component-scan base-package="fr.jihed"/>
	
</beans>